<?php

namespace App\Models\Inputs\Stocks;

use App\Colaborador;
use App\Peca;
use App\Traits\SecurityTrait;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletes;

class PartStock extends Model {
	use SoftDeletes;
	use SecurityTrait;
	public $timestamps = true;
	protected $fillable = [
		'security_id',
		'part_id',
		'owner_id',
	];

	// ************************** FUNCTIONS **********************************


	static public function getAlltoSelectList() {
		return self::get()->map( function ( $s ) {
			return [
				'id'          => $s->id,
				'description' => $s->getShortDescritptions()
			];
		} )->pluck( 'description', 'id' );
	}

	static public function assign($data)
	{
		return self::find($data['id'])->update([
			'owner_id'  => $data['owner_id']
		]);
	}

	public function getShortCost( ) {
		return $this->part->getShortCost();
	}

	public function getShortOwnerName( ) {
		return $this->owner->getShortName();
	}

	public function getShortDescritptions( ) {
		return $this->part->getShortDescriptions();
	}

	public function setOwner( $owner_id ) {
		return $this->update( [
			'owner_id' => $owner_id
		] );
	}

	static public function createClean( array $attributes = [] ) {
		$attributes['owner_id']     = null;
		return parent::create( $attributes ); // TODO: Change the autogenerated stub
	}


	// ************************** RELASHIONSHIP **********************************
	public function part() {
		return $this->belongsTo( Peca::class ,'part_id','idpeca');
	}

	public function owner() {
		return $this->belongsTo( Colaborador::class, 'owner_id', 'idcolaborador' );
	}
}
